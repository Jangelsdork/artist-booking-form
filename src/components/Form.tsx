/* eslint-disable import/prefer-default-export */
"use client"

import * as z from "zod"

import { zodResolver } from "@hookform/resolvers/zod"
import { useForm } from "react-hook-form"
const dayjs = require('dayjs')


const today = dayjs().format("YYYY-MM-DD")

const formSchema = z.object({
  first_name: "",
  last_name: "",
  email: "",
  phone: z.string().min(8).max(15),
  artist_name: "",
  type_performance: z.string().min(2).max(8),
  event_date: z.coerce.date().min(new Date(today), { message: "Date must be in the future" }),
  alternative_dates: "",
  event_name: "",
  financial_offer: z.number(),
  currency: z.string().min(3).max(3),
  wht: z.boolean(),
  wht_amount: z.number().lt(100).positive(), 
  role: "", 
  venue_name: "",
  venue_street: "",
  venue_number: z.string().min(2).max(10),
  venue_city: "",
  venue_country: "", 
  venue_capacity: z.number().lt(100000).positive(), 
  vip_tables: z.number().lt(1000).positive(), 
  venue_website: z.string().url({ message: "Invalid url" }),
  sound_system: z.string().min(2).max(100),
  stage_or_booth: z.string().min(2).max(10),
  ticket_price_adv: z.string().min(2).max(15),
  ticket_price_dos: z.string().min(2).max(15),
  billing: z.string().min(2).max(100),
  announcement: z.coerce.date().min(new Date(today), { message: "Date must be in the future" }),
  other_artists: z.string().min(2).max(500),
  artist_stage: "", 
  proposed_playtime: z.string().min(2).max(20),
  proposed_timetable: z.string().min(2).max(100),
  load_in: "",
  soundcheck: "", 
  doors_open: "", 
  doors_close: "",
  company_name: "",
  company_street: "",
  company_number: z.string().min(2).max(10),
  company_city: "",
  company_country: "", 
  company_vat: z.string().min(2).max(20), 
  signatory_first: "",
  signatory_last: "",
  signatory_email: "",
  signatory_phone: z.string().min(8).max(15),
  promoter_website: z.string().url({ message: "Invalid url" }),
  previous_booked: z.string().min(2).max(100),
  logistics_first: "",
  logistics_last: "",
  logistics_email: "",
  logistics_phone: z.string().min(8).max(15),
  airport: "",
  time_to_hotel: "",
  time_to_venue: "",
  visa: "",
  health: "",
  additional: z.string().max(500),
})


export function BookingForm(){
  const form = useForm<z.infer<typeof formSchema>>({
    resolver: zodResolver(formSchema), 
    defaultValues: {
      first_name: "",
      last_name: "",
      email: "",
      phone: z.string().min(8).max(15),
      artist_name: "",
      type_performance: z.string().min(2).max(8),
      event_date: z.coerce.date().min(new Date(today), { message: "Date must be in the future" }),
      alternative_dates: "",
      event_name: "",
      financial_offer: z.number(),
      currency: z.string().min(3).max(3),
      wht: z.boolean(),
      wht_amount: z.number().lt(100).positive(), 
      role: "", 
      venue_name: "",
      venue_street: "",
      venue_number: z.string().min(2).max(10),
      venue_city: "",
      venue_country: "", 
      venue_capacity: z.number().lt(100000).positive(), 
  vip_tables: z.number().lt(1000).positive(), 
  venue_website: z.string().url({ message: "Invalid url" }),
  sound_system: z.string().min(2).max(100),
  stage_or_booth: z.string().min(2).max(10),
  ticket_price_adv: z.string().min(2).max(15),
  ticket_price_dos: z.string().min(2).max(15),
  billing: z.string().min(2).max(100),
  announcement: z.coerce.date().min(new Date(today), { message: "Date must be in the future" }),
  other_artists: z.string().min(2).max(500),
  artist_stage: "", 
  proposed_playtime: z.string().min(2).max(20),
  proposed_timetable: z.string().min(2).max(100),
  load_in: "",
  soundcheck: "", 
  doors_open: "", 
  doors_close: "",
  company_name: "",
  company_street: "",
  company_number: z.string().min(2).max(10),
  company_city: "",
  company_country: "", 
  company_vat: z.string().min(2).max(20), 
  signatory_first: "",
  signatory_last: "",
  signatory_email: "",
  signatory_phone: z.string().min(8).max(15),
  promoter_website: z.string().url({ message: "Invalid url" }),
  previous_booked: z.string().min(2).max(100),
  logistics_first: "",
  logistics_last: "",
  logistics_email: "",
  logistics_phone: z.string().min(8).max(15),
  airport: "",
  time_to_hotel: "",
  time_to_venue: "",
  visa: "",
  health: "",
  additional: z.string().max(500),
    },
  })


  function onSubmit(values: z.infer<typeof formSchema>) {
    console.log(values)
  }
}
